name: cloudflare_http_requests
author: Antimatter
description: "A preset for consuming logs generated by Cloudflare"
autoloader:
  format: json
silver:
  preTransform:
    - name: cloudflare_http_requests
      filter: ""
      postFilter: ""
      fields: []
      utils:
        unreferencedColumns:
          preserve: true
  transform:
    - name: cloudflare_http_requests
      filter: ""
      postFilter: ""
      fields:
        - name: time
          expr: CAST(EdgeStartTimestamp AS TIMESTAMP)
        - name: method
          from: ClientRequestMethod
        - name: http_status_code
          expr: case when (EdgeServerIP != '') then OriginResponseStatus else EdgeResponseStatus end

      utils:
        unreferencedColumns:
          preserve: true
gold:
  - name: network_activity
    input: cloudflare_http_requests
    fields:
      # OCSF required fields
      - name: activity_id
        expr: CASE WHEN LOWER(method) = 'connect' THEN 1 WHEN LOWER(method) = 'delete' THEN 2 WHEN LOWER(method) = 'get' THEN 3 WHEN LOWER(method) = 'head' THEN 4 WHEN LOWER(method) = 'options' THEN 5 WHEN LOWER(method) = 'post' THEN 6 WHEN LOWER(method) = 'put' THEN 7 WHEN LOWER(method) = 'trace' THEN 8 WHEN method IS NULL OR method = '' THEN 0 ELSE 99 END
      - name: category_uid
        expr: CAST('4' AS INT)
      - name: class_uid
        expr: CAST('4002' AS INT)
      - name: dst_endpoint.ip
        from: OriginIP
      - name: dst_endpoint.hostname
        from: ClientRequestHost
      - name: time
        from: time
      - name: metadata.version
        literal: 1.3.0
      - name: severity_id
        expr: CAST('99' AS INT) # severity of 99 indicates it is unmapped
      - name: type_uid
        expr: CAST(class_uid * 100 + activity_id AS BIGINT)

      # Optional/Recommended fields
      - name: src_endpoint.ip
        from: ClientIP
      - name: src_endpoint.type_id
        expr: CASE WHEN LOWER(ClientDeviceType) = 'server' THEN 1 WHEN LOWER(ClientDeviceType) = 'desktop' THEN 2 WHEN LOWER(ClientDeviceType) = 'laptop' THEN 3 WHEN LOWER(ClientDeviceType) = 'tablet' THEN 4 WHEN LOWER(ClientDeviceType) = 'mobile' THEN 5 WHEN LOWER(ClientDeviceType) = 'virtual' THEN 6 WHEN LOWER(ClientDeviceType) = 'iot' THEN 7 WHEN LOWER(ClientDeviceType) = 'browser' THEN 8 WHEN LOWER(ClientDeviceType) = 'firewall' THEN 9 WHEN LOWER(ClientDeviceType) = 'switch' THEN 10 WHEN LOWER(ClientDeviceType) = 'hub' THEN 11 WHEN LOWER(ClientDeviceType) = 'router' THEN 12 WHEN LOWER(ClientDeviceType) = 'ids' THEN 13 WHEN LOWER(ClientDeviceType) = 'ips' THEN 14 WHEN LOWER(ClientDeviceType) = 'load balancer' THEN 15 WHEN ClientDeviceType IS NULL OR ClientDeviceType = '' THEN 0 ELSE 99 END
      - name: src_endpoint.location.country
        from: ClientCountry
      - name: src_endpoint.location.region
        from: ClientRegionCode

      - name: http_request.http_method
        from: method
      - name: http_request.referrer
        from: ClientRequestReferer
      - name: http_request.user_agent
        from: ClientRequestUserAgent
      - name: http_request.length
        from: ClientRequestBytes
      - name: http_request.url.hostname
        from: ClientRequestHost
      - name: http_request.url.path
        from: ClientRequestPath

      - name: http_response.content_type
        from: EdgeResponseContentType
      - name: http_response.code
        from: EdgeResponseStatus
      - name: http_response.status
        from: EdgeResponseStatus
      - name: http_response.length
        from: EdgeResponseBytes

      - name: tls.version
        from: ClientSSLProtocol
      - name: traffic.bytes_in
        from: ClientRequestBytes
      - name: traffic.bytes_out
        from: EdgeResponseStatus
      - name: duration
        expr: DATEDIFF(SECOND, CAST(time AS TIMESTAMP), CAST(EdgeEndTimestamp AS TIMESTAMP))